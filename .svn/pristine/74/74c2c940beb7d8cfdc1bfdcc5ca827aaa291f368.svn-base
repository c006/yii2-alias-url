<?php
    /**
     * Created by PhpStorm.
     * User: user
     * Date: 5/25/14
     * Time: 10:55 PM
     */
    namespace c006\url\assets;

    use Yii;
    use yii\web\Request;
    use yii\web\UrlManager;
    use yii\web\UrlRuleInterface;

    class AppAliasUrl implements UrlRuleInterface
    {

        /**
         * Parses the given request and returns the corresponding route and parameters.
         *
         * @param UrlManager $manager the URL manager
         * @param Request    $request the request component
         *
         * @return array|boolean the parsing result. The route and the parameters are returned as an array.
         * If false, it means this rule cannot be used to parse this path info.
         */
        public function parseRequest($manager, $request)
        {
                                                                        print_r($request);  exit;
            //            echo $request->pathInfo . Br;
            //            echo $request->url . Br;

            if ( stripos('=', $request->url) > 0 )
                list( $base, $uri ) = explode('=', $request->url);
            else
                $uri = $request->pathInfo;
            $sql = "SELECT * FROM `alias_url` WHERE (UPPER(`public`)) = '" . (strtoupper($uri)) . "';";
//            $sql = "SELECT * FROM `alias_url` WHERE UPPER(`public`) LIKE ('" . strtoupper($uri) . "%');";
            die($sql);
            $row = Yii::$app->db->createCommand($sql)->queryOne();
            if ( $row === FALSE )
                return FALSE;
            //            $request->pathInfo = $row[ 'private' ];
            //            $params = str_replace($row[ 'private' ], '', $request->url);
                        die($row[ 'private' ]);
            $request->url = '/index.php?r=' . $row[ 'private' ];
//                        print_r($request);
//                        exit;
            return [ 'index.php', [ 'r' => $row[ 'private' ] ] ];
        }


        /**
         * Creates a URL according to the given route and parameters.
         *
         * @param UrlManager $manager the URL manager
         * @param string     $route   the route. It should not have slashes at the beginning or the end.
         * @param array      $params  the parameters
         *
         * @return string|boolean the created URL, or false if this rule cannot be used for creating this URL.
         */
        public function createUrl($manager, $route, $params)
        {
        }
    }
